{"ast":null,"code":"var _jsxFileName = \"/Users/emrekelleci/Desktop/color/src/App.js\";\nimport React, { createRef } from 'react';\nimport './App.css';\nimport Color from './Color.js';\nimport \"./Color.css\";\nimport { TweenMax } from 'gsap/all';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      col1: \"\",\n      col2: \"\",\n      render: false,\n      empty: \"\",\n      key: 0\n    };\n    this.colors = [];\n    this.colorChange = this.colorChange.bind(this);\n    this.colorAdded = this.colorAdded.bind(this);\n    this.arrayModified = this.arrayModified.bind(this);\n    this.updateArray = this.updateArray.bind(this);\n    this.firstinput = createRef();\n    this.secondinput = createRef();\n    this.upLeft = null;\n    this.upRight = null;\n  }\n\n  async updateArray() {\n    this.colors = [];\n    const result = await fetch(`http://localhost:4000/color`);\n    const data = await result.json();\n    this.arrayModified(data);\n    this.setState({\n      render: true\n    });\n  }\n\n  arrayModified(data) {\n    let maxKey = 0;\n    data.map(({\n      key,\n      color1,\n      color2,\n      lock\n    }) => {\n      key > maxKey ? maxKey = key : maxKey = maxKey;\n      this.colors.push({\n        key: key,\n        first: color1,\n        second: color2,\n        lock: lock\n      }); //********\n    });\n    maxKey += 1;\n    this.setState({\n      key: maxKey\n    });\n  }\n\n  componentDidMount() {\n    this.updateArray();\n  }\n\n  colorChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  async colorAdded(e) {\n    let colorJson = {\n      \"key\": this.state.key,\n      \"color1\": this.state.col1,\n      //******\n      \"color2\": this.state.col2,\n      \"lock\": false\n    };\n    this.setState({\n      key: this.state.key + 1\n    });\n    fetch(`http://localhost:4000/newcolor`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(colorJson)\n    });\n    setTimeout(() => {\n      console.log(\"Done\");\n      this.updateArray();\n    }, 100);\n    this.firstinput.value = \"\";\n    this.secondinput.value = \"\";\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"biggerPicture\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"arrows\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"up-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 30\n      }\n    }, \"/\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"up-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 64\n      }\n    }, \"\\\\\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"down\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, \"\\\\/\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pickcolor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"firstlabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 8\n      }\n    }, \" First: \", /*#__PURE__*/React.createElement(\"input\", {\n      className: \"firstlabel-input\",\n      ref: el => this.firstinput = el,\n      name: \"col1\",\n      type: \"text\",\n      onChange: this.colorChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 46\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"secondlabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 8\n      }\n    }, \" Second: \", /*#__PURE__*/React.createElement(\"input\", {\n      className: \"secondlabel-input\",\n      ref: el => this.secondinput = el,\n      type: \"reset\",\n      name: \"col2\",\n      type: \"text\",\n      onChange: this.colorChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 48\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button\",\n      onClick: this.colorAdded,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 8\n      }\n    }, \"Add Color\")), this.colors.map(({\n      key,\n      first,\n      second,\n      lock\n    }) => /*#__PURE__*/React.createElement(Color, {\n      keyColor: key,\n      color1: first,\n      color2: second,\n      lock: lock,\n      update: this.updateArray,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/emrekelleci/Desktop/color/src/App.js"],"names":["React","createRef","Color","TweenMax","App","Component","constructor","props","state","col1","col2","render","empty","key","colors","colorChange","bind","colorAdded","arrayModified","updateArray","firstinput","secondinput","upLeft","upRight","result","fetch","data","json","setState","maxKey","map","color1","color2","lock","push","first","second","componentDidMount","e","target","name","value","colorJson","method","headers","body","JSON","stringify","setTimeout","console","log","el"],"mappings":"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","sourcesContent":["import React,{ createRef } from 'react';\nimport './App.css';\nimport Color from './Color.js';\nimport \"./Color.css\";\nimport { TweenMax } from 'gsap/all';\nclass App extends React.Component {\n  constructor(props) {\n     super(props);\n     this.state={col1:\"\",col2:\"\",render:false,empty:\"\",key:0};\n     this.colors = [];\n     this.colorChange = this.colorChange.bind(this);\n     this.colorAdded = this.colorAdded.bind(this);\n     this.arrayModified = this.arrayModified.bind(this);\n     this.updateArray = this.updateArray.bind(this);\n     this.firstinput= createRef();\n     this.secondinput =createRef();\n     this.upLeft=null;\n     this.upRight=null;\n}\n\n  async updateArray(){\n\n    this.colors=[];\n    const result = await fetch(`http://localhost:4000/color`);\n    const data = await result.json();\n    this.arrayModified(data);\n    this.setState({render:true});\n  }\n  arrayModified(data){\n    let maxKey=0;\n  data.map(({key,color1,color2,lock})=>{\n     (key>maxKey)? maxKey=key : maxKey=maxKey;\n     this.colors.push({key:key,first:color1,second:color2,lock:lock});//********\n  });\n    maxKey+=1;\n    this.setState({key:maxKey});\n\n}\n\n  componentDidMount(){\n\n    this.updateArray();\n\n\n\n}\n\n  colorChange(e){\n\n        this.setState({[e.target.name]:e.target.value});\n\n  }\n\n async colorAdded(e){\n\n   let colorJson= {\n    \"key\":this.state.key,\n   \t\"color1\" :this.state.col1,//******\n   \t\"color2\" :this.state.col2,\n    \"lock\" :false\n\n   }\n\n   this.setState({key:this.state.key+1});\n\n      fetch(`http://localhost:4000/newcolor`,{\n         method:'POST',\n         headers: {\n        'Content-Type': 'application/json'\n    },\n         body: JSON.stringify(colorJson)})\n\n    setTimeout(()=>{console.log(\"Done\");this.updateArray()}, 100);\n    this.firstinput.value=\"\";\n    this.secondinput.value=\"\";\n\n\n  }\n\n  render(){\n     return(\n\n       <div className=\"biggerPicture\">\n       <div className=\"arrows\">\n        <div className=\"up\"> <span className=\"up-left\">/</span><span className=\"up-right\">\\</span></div>\n        <div className=\"down\">\\/</div>\n       </div>\n       <div className=\"pickcolor\">\n       <label className=\"firstlabel\"> First: <input className=\"firstlabel-input\" ref={el => this.firstinput = el} name=\"col1\" type=\"text\" onChange={this.colorChange}  /> </label>\n       <label className=\"secondlabel\"> Second: <input className=\"secondlabel-input\" ref={el => this.secondinput = el} type=\"reset\" name=\"col2\" type=\"text\"  onChange={this.colorChange}  /> </label>\n       <button className=\"button\" onClick={this.colorAdded}>Add Color</button>\n       </div>\n       {this.colors.map(({key,first,second,lock})=>(\n            <Color keyColor={key} color1={first} color2={second} lock={lock} update={this.updateArray} />\n        )\n      )}\n      </div>\n      );\n\n }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}