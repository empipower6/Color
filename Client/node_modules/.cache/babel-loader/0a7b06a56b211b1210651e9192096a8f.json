{"ast":null,"code":"import _regeneratorRuntime from \"/Users/emrekelleci/Desktop/Everything/Coding/color/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/emrekelleci/Desktop/Everything/Coding/color/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/emrekelleci/Desktop/Everything/Coding/color/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/emrekelleci/Desktop/Everything/Coding/color/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/emrekelleci/Desktop/Everything/Coding/color/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/emrekelleci/Desktop/Everything/Coding/color/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/emrekelleci/Desktop/Everything/Coding/color/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/emrekelleci/Desktop/Everything/Coding/color/Client/src/App.js\";\nimport React, { createRef } from 'react';\nimport './App.css';\nimport Color from './Color.js';\nimport \"./Color.css\";\n\nvar App = /*#__PURE__*/function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      col1: \"\",\n      col2: \"\",\n      render: false,\n      empty: \"\",\n      key: 0\n    };\n    _this.colors = [];\n    _this.colorChange = _this.colorChange.bind(_assertThisInitialized(_this));\n    _this.colorAdded = _this.colorAdded.bind(_assertThisInitialized(_this));\n    _this.arrayModified = _this.arrayModified.bind(_assertThisInitialized(_this));\n    _this.updateArray = _this.updateArray.bind(_assertThisInitialized(_this));\n    _this.validColor = _this.validColor.bind(_assertThisInitialized(_this));\n    _this.firstinput = createRef();\n    _this.secondinput = createRef();\n    _this.verifiedColors = [];\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"updateArray\",\n    value: function () {\n      var _updateArray = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var result, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.colors = [];\n                _context.next = 3;\n                return fetch(\"http://localhost:80/color\");\n\n              case 3:\n                result = _context.sent;\n                _context.next = 6;\n                return result.json();\n\n              case 6:\n                data = _context.sent;\n                this.arrayModified(data);\n                this.setState({\n                  render: true\n                });\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function updateArray() {\n        return _updateArray.apply(this, arguments);\n      }\n\n      return updateArray;\n    }()\n  }, {\n    key: \"arrayModified\",\n    value: function arrayModified(data) {\n      var _this2 = this;\n\n      var maxKey = 0;\n      data.map(function (_ref) {\n        var key = _ref.key,\n            keyColor = _ref.keyColor,\n            color1 = _ref.color1,\n            color2 = _ref.color2,\n            lock = _ref.lock;\n        keyColor > maxKey ? maxKey = keyColor : maxKey = maxKey;\n\n        _this2.colors.push({\n          key: key,\n          keyColor: key,\n          first: color1,\n          second: color2,\n          lock: lock\n        }); //********\n\n      });\n      maxKey += 1;\n      this.setState({\n        key: maxKey\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateArray();\n      this.verifiedColors.push(\"antiquewhite\", \"aqua\", \"aquamarine\", \"azure\", \"beige\", \"bisque\", \"black\", \"blanchedalmond\", \"blue\", \"blueviolet\", \"brown\", \"burlywood\", \"cadetblue\", \"chartreuse\", \"chocolate\", \"coral\", \"cornflowerblue\", \"cornsilk\", \"crimson\", \"cyan\", \"darkblue\", \"darkcyan\", \"darkgoldenrod\", \"darkgray\", \"darkgreen\", \"darkgrey\", \"darkkhaki\", \"darkmagenta\", \"darkolivegreen\", \"darkorange\", \"darkorchid\", \"darkred\", \"darksalmon\", \"darkseagreen\", \"darkslateblue\", \"darkslategray\", \"darkslategrey\", \"darkturquoise\", \"darkviolet\", \"deeppink\", \"deepskyblue\", \"dimgray\", \"dimgrey\", \"dodgerblue\", \"firebrick\", \"floralwhite\", \"forestgreen\", \"fuchsia\", \"gainsboro\", \"ghostwhite\", \"gold\", \"goldenrod\", \"gray\", \"green\", \"greenyellow\", \"grey\", \"honeydew\", \"hotpink\", \"indianred\", \"indigo\", \"ivory\", \"khaki\", \"lavender\", \"lavenderblush\", \"lawngreen\", \"lemonchiffon\", \"lightblue\", \"lightcoral\", \"lightcyan\", \"lightgoldenrodyellow\", \"lightgray\", \"lightgreen\", \"lightgrey\", \"lightpink\", \"lightsalmon\", \"lightseagreen\", \"lightskyblue\", \"lightslategray\", \"lightslategrey\", \"lightsteelblue\", \"lightyellow\", \"lime\", \"limegreen\", \"linen\", \"magenta\", \"maroon\", \"mediumaquamarine\", \"mediumblue\", \"mediumorchid\", \"mediumpurple\", \"mediumseagreen\", \"mediumslateblue\", \"mediumspringgreen\", \"mediumturquoise\", \"mediumvioletred\", \"midnightblue\", \"mintcream\", \"mistyrose\", \"moccasin\", \"navajowhite\", \"navy\", \"oldlace\", \"olive\", \"olivedrab\", \"orange\", \"orangered\", \"orchid\", \"palegoldenrod\", \"palegreen\", \"paleturquoise\", \"palevioletred\", \"papayawhip\", \"peachpuff\", \"peru\", \"pink\", \"plum\", \"powderblue\", \"purple\", \"rebeccapurple\", \"red\", \"rosybrown\", \"royalblue\", \"saddlebrown\", \"salmon\", \"sandybrown\", \"seagreen\", \"seashell\", \"sienna\", \"silver\", \"skyblue\", \"slateblue\", \"slategray\", \"slategrey\", \"snow\", \"springgreen\", \"steelblue\", \"tan\", \"teal\", \"thistle\", \"tomato\", \"turquoise\", \"violet\", \"wheat\", \"white\", \"whitesmoke\", \"yellow\", \"yellowgreen\");\n    }\n  }, {\n    key: \"colorChange\",\n    value: function colorChange(e) {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    }\n  }, {\n    key: \"validColor\",\n    value: function validColor(col) {\n      for (var i = 0; i < this.verifiedColors.length; i++) {\n        if (col === this.verifiedColors[i]) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"colorAdded\",\n    value: function () {\n      var _colorAdded = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n        var _this3 = this;\n\n        var valid1, valid2, colorJson;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                valid1 = false;\n                valid2 = false; //Capitalize the non # colors\n\n                if (this.state.col1[0] !== \"#\") {\n                  if (this.validColor(this.state.col1)) {\n                    valid1 = true;\n                  }\n\n                  this.state.col1 = this.state.col1[0].toUpperCase() + this.state.col1.slice(1);\n                }\n\n                if (this.state.col2[0] !== \"#\") {\n                  if (this.validColor(this.state.col2)) {\n                    valid2 = true;\n                  }\n\n                  this.state.col2 = this.state.col2[0].toUpperCase() + this.state.col2.slice(1);\n                }\n\n                if (this.state.col1[0] === \"#\") {\n                  valid1 = true;\n                }\n\n                if (this.state.col2[0] === \"#\") {\n                  valid2 = true;\n                }\n\n                if (valid1 && valid2) {\n                  colorJson = {\n                    \"key\": this.state.key,\n                    \"keyColor\": this.state.key,\n                    \"color1\": this.state.col1,\n                    //******\n                    \"color2\": this.state.col2,\n                    \"lock\": false\n                  };\n                  this.setState({\n                    key: this.state.key + 1\n                  });\n                  fetch(\"http://localhost:80/newcolor\", {\n                    method: 'POST',\n                    headers: {\n                      'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify(colorJson)\n                  });\n                  setTimeout(function () {\n                    _this3.updateArray();\n                  }, 100);\n                } else if (!valid1) {\n                  alert(this.state.col1 + \"  is not a valid color. Please try again :)\");\n                } else if (!valid2) {\n                  alert(this.state.col2 + \"  is not a valid color. Please try again :)\");\n                }\n\n                this.setState({\n                  [this.firstinput.name]: \"\"\n                });\n                this.setState({\n                  [this.secondinput.name]: \"\"\n                });\n                this.firstinput.value = \"\";\n                this.secondinput.value = \"\";\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function colorAdded(_x) {\n        return _colorAdded.apply(this, arguments);\n      }\n\n      return colorAdded;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"biggerPicture\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"welcome-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 8\n        }\n      }, \" Emre's Colors \"), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"welcome-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 8\n        }\n      }, \" Welcome to my color palette! I created this website to have a space to put the color combinations I like in everyday life. I hope you enjoy it! Feel free to try it, but please delete the colors you create!! Have a good one :) \"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pickcolor\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"firstlabel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 8\n        }\n      }, \" First: \", /*#__PURE__*/React.createElement(\"input\", {\n        className: \"firstlabel-input\",\n        ref: function ref(el) {\n          return _this4.firstinput = el;\n        },\n        name: \"col1\",\n        type: \"text\",\n        onChange: this.colorChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 46\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"firstbox\",\n        style: {\n          backgroundColor: this.state.col1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }\n      }, \" \")), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"secondlabel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 8\n        }\n      }, \" Second: \", /*#__PURE__*/React.createElement(\"input\", {\n        className: \"secondlabel-input\",\n        ref: function ref(el) {\n          return _this4.secondinput = el;\n        },\n        type: \"reset\",\n        name: \"col2\",\n        type: \"text\",\n        onChange: this.colorChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 48\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"secondbox\",\n        style: {\n          backgroundColor: this.state.col2\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 8\n        }\n      }, \" \")), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"button\",\n        onClick: this.colorAdded,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 8\n        }\n      }, \"Add Color\")), this.colors.map(function (_ref2) {\n        var key = _ref2.key,\n            first = _ref2.first,\n            second = _ref2.second,\n            lock = _ref2.lock,\n            index = _ref2.index;\n        return /*#__PURE__*/React.createElement(Color, {\n          key: key,\n          keyColor: key,\n          color1: first,\n          color2: second,\n          lock: lock,\n          update: _this4.updateArray,\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }\n        });\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/emrekelleci/Desktop/Everything/Coding/color/Client/src/App.js"],"names":["React","createRef","Color","App","props","state","col1","col2","render","empty","key","colors","colorChange","bind","colorAdded","arrayModified","updateArray","validColor","firstinput","secondinput","verifiedColors","fetch","result","json","data","setState","maxKey","map","keyColor","color1","color2","lock","push","first","second","e","target","name","value","col","i","length","valid1","valid2","toUpperCase","slice","colorJson","method","headers","body","JSON","stringify","setTimeout","alert","el","backgroundColor","index","Component"],"mappings":"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","sourcesContent":["import React,{ createRef } from 'react';\nimport './App.css';\nimport Color from './Color.js';\nimport \"./Color.css\";\n\n\nclass App extends React.Component {\n  constructor(props) {\n     super(props);\n     this.state={col1:\"\",col2:\"\",render:false,empty:\"\",key:0};\n     this.colors = [];\n     this.colorChange = this.colorChange.bind(this);\n     this.colorAdded = this.colorAdded.bind(this);\n     this.arrayModified = this.arrayModified.bind(this);\n     this.updateArray = this.updateArray.bind(this);\n     this.validColor = this.validColor.bind(this);\n     this.firstinput= createRef();\n     this.secondinput =createRef();\n\n\n     this.verifiedColors =[];\n}\n\n  async updateArray(){\n\n    this.colors=[];\n    const result = await fetch(`http://localhost:80/color`);\n    const data = await result.json();\n    this.arrayModified(data);\n    this.setState({render:true});\n  }\n  arrayModified(data){\n    let maxKey=0;\n  data.map(({key,keyColor,color1,color2,lock})=>{\n     (keyColor>maxKey)? maxKey=keyColor : maxKey=maxKey;\n     this.colors.push({key:key,keyColor:key,first:color1,second:color2,lock:lock});//********\n  });\n    maxKey+=1;\n    this.setState({key:maxKey});\n\n}\n\n  componentDidMount(){\n\n    this.updateArray();\n\n     this.verifiedColors.push(\"antiquewhite\",\"aqua\",\"aquamarine\",\"azure\",\n\"beige\",\"bisque\",\"black\",\"blanchedalmond\",\"blue\",\"blueviolet\",\"brown\",\"burlywood\",\"cadetblue\",\"chartreuse\",\"chocolate\",\"coral\",\n\"cornflowerblue\",\"cornsilk\",\"crimson\",\"cyan\",\"darkblue\",\"darkcyan\",\"darkgoldenrod\",\"darkgray\",\"darkgreen\",\"darkgrey\",\"darkkhaki\",\n\"darkmagenta\",\"darkolivegreen\",\"darkorange\",\"darkorchid\",\"darkred\",\"darksalmon\",\"darkseagreen\",\"darkslateblue\",\"darkslategray\",\"darkslategrey\",\n\"darkturquoise\",\"darkviolet\",\"deeppink\",\"deepskyblue\",\"dimgray\",\"dimgrey\",\"dodgerblue\",\"firebrick\",\"floralwhite\",\"forestgreen\",\n\"fuchsia\",\"gainsboro\",\"ghostwhite\",\"gold\",\"goldenrod\",\"gray\",\"green\",\"greenyellow\",\"grey\",\"honeydew\",\"hotpink\",\"indianred\",\"indigo\",\n\"ivory\",\"khaki\",\"lavender\",\"lavenderblush\",\"lawngreen\",\"lemonchiffon\",\"lightblue\",\"lightcoral\",\"lightcyan\",\"lightgoldenrodyellow\",\"lightgray\",\n\"lightgreen\",\"lightgrey\",\"lightpink\",\"lightsalmon\",\"lightseagreen\",\"lightskyblue\",\"lightslategray\",\"lightslategrey\",\"lightsteelblue\",\"lightyellow\",\"lime\",\n\"limegreen\",\"linen\",\"magenta\",\"maroon\",\"mediumaquamarine\",\"mediumblue\",\"mediumorchid\",\"mediumpurple\",\"mediumseagreen\",\n\"mediumslateblue\",\"mediumspringgreen\",\"mediumturquoise\",\"mediumvioletred\",\"midnightblue\",\"mintcream\",\"mistyrose\",\"moccasin\",\n\"navajowhite\",\"navy\",\"oldlace\",\"olive\",\"olivedrab\",\"orange\",\"orangered\",\"orchid\",\"palegoldenrod\",\"palegreen\",\"paleturquoise\",\n\"palevioletred\",\"papayawhip\",\"peachpuff\",\"peru\",\"pink\",\"plum\",\n\"powderblue\",\"purple\",\"rebeccapurple\",\"red\",\"rosybrown\",\"royalblue\",\"saddlebrown\",\"salmon\",\"sandybrown\",\"seagreen\",\"seashell\",\n\"sienna\",\"silver\",\"skyblue\",\"slateblue\",\"slategray\",\"slategrey\",\"snow\",\"springgreen\",\"steelblue\",\"tan\",\"teal\",\"thistle\",\"tomato\",\n\"turquoise\",\"violet\",\"wheat\",\"white\",\"whitesmoke\",\"yellow\",\"yellowgreen\",\n)\n\n}\n\n  colorChange(e){\n\n\n        this.setState({[e.target.name]:e.target.value});\n\n  }\n  validColor(col){\n\n\n    for(let i=0;i<this.verifiedColors.length;i++){\n        if(col=== this.verifiedColors[i]){\n           return true;\n        }\n    }\n    return false;\n  }\n\n\n async colorAdded(e){\n   let valid1 =false;\n   let valid2= false;\n\n//Capitalize the non # colors\n   if(this.state.col1[0] !== \"#\"){\n     if(this.validColor(this.state.col1)){valid1=true;}\n     this.state.col1 =this.state.col1[0].toUpperCase()+this.state.col1.slice(1);\n   }if(this.state.col2[0]!==\"#\"){\n     if(this.validColor(this.state.col2)){valid2=true;}\n     this.state.col2 =this.state.col2[0].toUpperCase()+this.state.col2.slice(1);\n   }\n   if(this.state.col1[0] === \"#\"){valid1=true;}\n   if(this.state.col2[0] === \"#\"){valid2=true;}\n   if(valid1 && valid2){\n   let colorJson= {\n    \"key\":this.state.key,\n    \"keyColor\":this.state.key,\n   \t\"color1\" :this.state.col1,//******\n   \t\"color2\" :this.state.col2,\n    \"lock\" :false\n\n   }\n\n\n   this.setState({key:this.state.key+1});\n\n      fetch(`http://localhost:80/newcolor`,{\n         method:'POST',\n         headers: {\n        'Content-Type': 'application/json'\n    },\n         body: JSON.stringify(colorJson)})\n\n    setTimeout(()=>{this.updateArray()}, 100);\n\n\n  }\n  else if(!valid1){\n    alert(this.state.col1 +\"  is not a valid color. Please try again :)\");\n  }\n  else if(!valid2){\n    alert(this.state.col2 +\"  is not a valid color. Please try again :)\");\n  }\n  this.setState({[this.firstinput.name]:\"\"});\n  this.setState({[this.secondinput.name]:\"\"});\n  this.firstinput.value=\"\";\n  this.secondinput.value=\"\";\n  }\n\n  render(){\n     return(\n\n       <div className=\"biggerPicture\">\n       <h1 className=\"welcome-header\"> Emre's Colors </h1>\n       <p className=\"welcome-text\"> Welcome to my color palette! I created this website to have a space to put the color combinations I like in everyday life. I hope you enjoy it! Feel free to try it, but please delete the colors you create!! Have a good one :) </p>\n       <div className=\"pickcolor\">\n       <label className=\"firstlabel\"> First: <input className=\"firstlabel-input\" ref={el => this.firstinput = el} name=\"col1\" type=\"text\" onChange={this.colorChange}  />\n          <div className=\"firstbox\"style={{backgroundColor:this.state.col1}}> </div>\n       </label>\n       <label className=\"secondlabel\"> Second: <input className=\"secondlabel-input\" ref={el => this.secondinput = el} type=\"reset\" name=\"col2\" type=\"text\"  onChange={this.colorChange}  />\n       <div className=\"secondbox\" style={{backgroundColor:this.state.col2}}> </div>\n\n        </label>\n       <button className=\"button\" onClick={this.colorAdded}>Add Color</button>\n       </div>\n       {this.colors.map(({key,first,second,lock,index})=>(\n            <Color key={key} keyColor={key} color1={first} color2={second} lock={lock} update={this.updateArray} />\n        )\n      )}\n\n      </div>\n\n\n      );\n\n }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}