{"ast":null,"code":"var _jsxFileName = \"/Users/emrekelleci/Desktop/color/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Color from './Color.js';\nimport \"./Color.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      col1: \"\",\n      col2: \"\",\n      render: false\n    };\n    this.colors = [{\n      first: \"red\",\n      second: \"yellow\"\n    }];\n    this.colorChange = this.colorChange.bind(this);\n    this.colorAdded = this.colorAdded.bind(this);\n  }\n\n  async componentDidMount() {\n    const result = await fetch(`http://localhost:4000/color`);\n    const data = await result.json();\n    data.map(({\n      color1,\n      color2\n    }) => {\n      this.colors.push({\n        first: color1,\n        second: color2\n      });\n    });\n    this.setState({\n      render: true\n    });\n  }\n\n  colorChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  async colorAdded(e) {\n    let colorJson = {\n      \"color1\": this.state.col1,\n      \"color2\": this.state.col2\n    };\n    fetch(`http://localhost:4000/newcolor`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(colorJson)\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"biggerPicture\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 8\n      }\n    }, \" First Color \", /*#__PURE__*/React.createElement(\"input\", {\n      name: \"col1\",\n      type: \"text\",\n      placeholder: \"Here...\",\n      onChange: this.colorChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 28\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 8\n      }\n    }, \" Secon Color \", /*#__PURE__*/React.createElement(\"input\", {\n      name: \"col2\",\n      type: \"text\",\n      placeholder: \"Here...\",\n      onChange: this.colorChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 28\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Add it up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      value: \"Add the Colors\",\n      onClick: this.colorAdded,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 8\n      }\n    }), this.colors.map(({\n      first,\n      second,\n      index\n    }) => /*#__PURE__*/React.createElement(Color, {\n      key: first,\n      color1: first,\n      color2: second,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/emrekelleci/Desktop/color/src/App.js"],"names":["React","Color","App","Component","constructor","props","state","col1","col2","render","colors","first","second","colorChange","bind","colorAdded","componentDidMount","result","fetch","data","json","map","color1","color2","push","setState","e","target","name","value","colorJson","method","headers","body","JSON","stringify","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Color from './Color.js';\nimport \"./Color.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n     super(props);\n     this.state={col1:\"\",col2:\"\",render:false};\n     this.colors = [{first:\"red\",second:\"yellow\"}];\n     this.colorChange = this.colorChange.bind(this);\n     this.colorAdded = this.colorAdded.bind(this);\n\n\n\n\n}\n  async componentDidMount(){\n\n\n\n        const result = await fetch(`http://localhost:4000/color`);\n        const data = await result.json();\n\n        data.map(({color1,color2})=>{\n\n           this.colors.push({first:color1,second:color2});\n        });\n        this.setState({render:true});\n}\n\n  colorChange(e){\n\n        this.setState({[e.target.name]:e.target.value});\n\n  }\n\n async colorAdded(e){\n\n   let colorJson= {\n   \t\"color1\" :this.state.col1,\n   \t\"color2\" :this.state.col2\n\n   }\n\n      fetch(`http://localhost:4000/newcolor`,{\n         method:'POST',\n         headers: {\n        'Content-Type': 'application/json'\n    },\n         body: JSON.stringify(colorJson)})\n\n\n  }\n\n  render(){\n     return(\n\n       <div className=\"biggerPicture\">\n\n       <label> First Color <input name=\"col1\" type=\"text\"  placeholder=\"Here...\" onChange={this.colorChange} /> </label>\n       <label> Secon Color <input name=\"col2\" type=\"text\"  placeholder=\"Here...\" onChange={this.colorChange} /> </label>\n       <input type=\"submit\" value=\"Add it up\" />\n\n       <button value=\"Add the Colors\" onClick={this.colorAdded} />\n       {this.colors.map(({first,second,index})=>(\n            <Color key={first} color1={first} color2={second} />\n        )\n      )}\n      </div>\n      );\n\n }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}