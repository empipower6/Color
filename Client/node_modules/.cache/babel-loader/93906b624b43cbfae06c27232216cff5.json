{"ast":null,"code":"var _jsxFileName = \"/Users/emrekelleci/Desktop/color/src/Color.js\";\nimport React from 'react';\nimport './Color.css';\nimport { TweenMax } from \"gsap\";\n\nclass Color extends React.Component {\n  constructor(props) {\n    super(props);\n    this.closed = this.closed.bind(this);\n    this.state = {\n      color: \"black\",\n      lock: this.props.lock\n    };\n    this.lock = this.lock.bind(this);\n    this.animate = null;\n  }\n\n  componentDidMount() {\n    TweenMax.fromTo(this.animate, 1, {\n      opacity: \"0\",\n      marginTop: \"20vw\"\n    }, {\n      opacity: \"1\",\n      marginTop: \"0vw\"\n    });\n\n    if (this.props.color2 === \"black\") {\n      this.setState({\n        color: \"white\"\n      });\n    }\n  }\n\n  async lock() {\n    const result = await fetch(`http://localhost:4000/ps`);\n    const data = await result.json();\n    setTimeout(() => {\n      let answer = prompt(\"Enter the maggiiiic keeey\");\n\n      if (answer === data[0][\"password\"]) {\n        this.setState({\n          lock: !this.state.lock\n        });\n        let colorJson = {\n          \"key\": this.props.keyColor,\n          \"color1\": this.props.color1,\n          \"color2\": this.props.color2,\n          \"lock\": this.state.lock\n        };\n        fetch(`http://localhost:4000/updateColor`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(colorJson)\n        });\n      } else {\n        alert(\"Magic word not correct\");\n      }\n    }, 100);\n  }\n\n  async closed() {\n    if (!this.state.lock) {\n      let colorJson = {\n        \"key\": this.props.keyColor,\n        \"color1\": this.props.color1,\n        \"color2\": this.props.color2,\n        \"lock\": this.state.lock\n      };\n      fetch(`http://localhost:4000/deletecolor`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(colorJson)\n      });\n      setTimeout(() => {\n        console.log(\"Done\");\n        this.props.update();\n      }, 200);\n    } else {\n      alert(\"You can't delete the color without unlocking it!\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"each-color-composition\",\n      ref: div => this.animate = div,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"lock\",\n      onClick: this.lock,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 10\n      }\n    }, this.state.lock ? \"locked\" : \"unlocked\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"close\",\n      onClick: this.closed,\n      style: {\n        color: this.state.color\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 10\n      }\n    }, \" X \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"left-compose\",\n      style: {\n        backgroundColor: this.props.color1\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"right-compose\",\n      style: {\n        backgroundColor: this.props.color2\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\n\nexport default Color;","map":{"version":3,"sources":["/Users/emrekelleci/Desktop/color/src/Color.js"],"names":["React","TweenMax","Color","Component","constructor","props","closed","bind","state","color","lock","animate","componentDidMount","fromTo","opacity","marginTop","color2","setState","result","fetch","data","json","setTimeout","answer","prompt","colorJson","keyColor","color1","method","headers","body","JSON","stringify","alert","console","log","update","render","div","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Color.css';\nimport { TweenMax } from \"gsap\";\n\nclass Color extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.closed=this.closed.bind(this);\n    this.state={color:\"black\",lock:this.props.lock};\n    this.lock = this.lock.bind(this);\n    this.animate= null;\n  }\n\n  componentDidMount(){\n\n    TweenMax.fromTo(this.animate,1,{opacity:\"0\",marginTop:\"20vw\"},{opacity:\"1\",marginTop:\"0vw\"});\n\n    if(this.props.color2 === \"black\" ){\n\n       this.setState({color:\"white\"});\n    }\n\n\n\n\n  }\n\n  async lock(){\n\n    const result = await fetch(`http://localhost:4000/ps`);\n    const data = await result.json();\n\n    setTimeout(()=>{\n\n      let answer= prompt(\"Enter the maggiiiic keeey\");\n\n      if(answer === data[0][\"password\"]){\n\n        this.setState({lock:!this.state.lock});\n        let colorJson= {\n          \"key\":this.props.keyColor,\n          \"color1\" :this.props.color1,\n          \"color2\" :this.props.color2,\n          \"lock\":this.state.lock\n\n        }\n\n           fetch(`http://localhost:4000/updateColor`,{\n              method:'POST',\n              headers: {\n             'Content-Type': 'application/json'\n         },\n              body: JSON.stringify(colorJson)})\n        }\n\n      else{\n\n          alert(\"Magic word not correct\");\n      }\n\n\n  },100);\n\n\n}\n\n  async closed(){\n   if(!this.state.lock){\n    let colorJson= {\n      \"key\":this.props.keyColor,\n      \"color1\" :this.props.color1,\n      \"color2\" :this.props.color2,\n      \"lock\":this.state.lock\n\n    }\n\n       fetch(`http://localhost:4000/deletecolor`,{\n          method:'POST',\n          headers: {\n         'Content-Type': 'application/json'\n     },\n          body: JSON.stringify(colorJson)})\n        setTimeout(()=>{console.log(\"Done\");this.props.update();}, 200);\n  }\n  else{\n     alert(\"You can't delete the color without unlocking it!\");\n  }\n}\n\n  render(){\n    return(<>\n\n      <div className=\"each-color-composition\" ref={div => this.animate = div} >\n         <div className=\"lock\" onClick={this.lock}>{this.state.lock?\"locked\":\"unlocked\"}</div>\n         <div className=\"close\" onClick={this.closed} style={{color:this.state.color}}> X </div>\n        <div className=\"left-compose\" style={{backgroundColor:this.props.color1}}>\n        </div>\n        <div className=\"right-compose\" style={{backgroundColor:this.props.color2}}>\n        </div>\n\n      </div>\n      </>\n    )\n  }\n\n\n}\n\n\nexport default Color;\n"]},"metadata":{},"sourceType":"module"}