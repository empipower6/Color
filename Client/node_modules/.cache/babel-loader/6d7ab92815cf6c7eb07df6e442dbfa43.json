{"ast":null,"code":"import _regeneratorRuntime from \"/Users/emrekelleci/Desktop/color/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/emrekelleci/Desktop/color/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/emrekelleci/Desktop/color/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/emrekelleci/Desktop/color/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/emrekelleci/Desktop/color/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/emrekelleci/Desktop/color/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/emrekelleci/Desktop/color/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/emrekelleci/Desktop/color/Client/src/App.js\";\nimport React, { createRef } from 'react';\nimport './App.css';\nimport Color from './Color.js';\nimport \"./Color.css\";\nimport { TweenMax } from 'gsap/all';\n\nvar App = /*#__PURE__*/function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      col1: \"\",\n      col2: \"\",\n      render: false,\n      empty: \"\",\n      key: 0\n    };\n    _this.colors = [];\n    _this.colorChange = _this.colorChange.bind(_assertThisInitialized(_this));\n    _this.colorAdded = _this.colorAdded.bind(_assertThisInitialized(_this));\n    _this.arrayModified = _this.arrayModified.bind(_assertThisInitialized(_this));\n    _this.updateArray = _this.updateArray.bind(_assertThisInitialized(_this));\n    _this.firstinput = createRef();\n    _this.secondinput = createRef();\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"updateArray\",\n    value: function () {\n      var _updateArray = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var result, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.colors = [];\n                _context.next = 3;\n                return fetch(\"http://localhost:80/color\");\n\n              case 3:\n                result = _context.sent;\n                _context.next = 6;\n                return result.json();\n\n              case 6:\n                data = _context.sent;\n                this.arrayModified(data);\n                this.setState({\n                  render: true\n                });\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function updateArray() {\n        return _updateArray.apply(this, arguments);\n      }\n\n      return updateArray;\n    }()\n  }, {\n    key: \"arrayModified\",\n    value: function arrayModified(data) {\n      var _this2 = this;\n\n      var maxKey = 0;\n      data.map(function (_ref) {\n        var key = _ref.key,\n            keyColor = _ref.keyColor,\n            color1 = _ref.color1,\n            color2 = _ref.color2,\n            lock = _ref.lock;\n        keyColor > maxKey ? maxKey = keyColor : maxKey = maxKey;\n\n        _this2.colors.push({\n          key: key,\n          keyColor: key,\n          first: color1,\n          second: color2,\n          lock: lock\n        }); //********\n\n      });\n      maxKey += 1;\n      this.setState({\n        key: maxKey\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateArray();\n\n      if (process.env.NODE_ENV === 'production') {\n        console.log(\"It's production\");\n      } else {\n        console.log(\"It's development\");\n      }\n    }\n  }, {\n    key: \"colorChange\",\n    value: function colorChange(e) {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    }\n  }, {\n    key: \"colorAdded\",\n    value: function () {\n      var _colorAdded = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n        var _this3 = this;\n\n        var colorJson;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                alert(this.state.col1);\n                colorJson = {\n                  \"key\": this.state.key,\n                  \"keyColor\": this.state.key,\n                  \"color1\": this.state.col1,\n                  //******\n                  \"color2\": this.state.col2,\n                  \"lock\": false\n                };\n                this.setState({\n                  [this.firstinput.name]: \"\"\n                });\n                this.setState({\n                  [this.secondinput.name]: \"\"\n                });\n                this.setState({\n                  key: this.state.key + 1\n                });\n                fetch(\"http://localhost:80/newcolor\", {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify(colorJson)\n                });\n                setTimeout(function () {\n                  console.log(\"Done\");\n\n                  _this3.updateArray();\n                }, 100);\n                this.firstinput.value = \"\";\n                this.secondinput.value = \"\";\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function colorAdded(_x) {\n        return _colorAdded.apply(this, arguments);\n      }\n\n      return colorAdded;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"biggerPicture\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"welcome-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 8\n        }\n      }, \" Emre's Colors \"), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"welcome-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 8\n        }\n      }, \" Welcome to my color palette! I created this website to have a space to put the color combinations I like in everyday life. I hope you enjoy it! Feel free to try it, but please delete the colors you create!! Have a good one :) \"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pickcolor\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"firstlabel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 8\n        }\n      }, \" First: \", /*#__PURE__*/React.createElement(\"input\", {\n        className: \"firstlabel-input\",\n        ref: function ref(el) {\n          return _this4.firstinput = el;\n        },\n        name: \"col1\",\n        type: \"text\",\n        onChange: this.colorChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 46\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"firstbox\",\n        style: {\n          backgroundColor: this.state.col1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }\n      }, \" \")), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"secondlabel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 8\n        }\n      }, \" Second: \", /*#__PURE__*/React.createElement(\"input\", {\n        className: \"secondlabel-input\",\n        ref: function ref(el) {\n          return _this4.secondinput = el;\n        },\n        type: \"reset\",\n        name: \"col2\",\n        type: \"text\",\n        onChange: this.colorChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 48\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"secondbox\",\n        style: {\n          backgroundColor: this.state.col2\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 8\n        }\n      }, \" \")), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"button\",\n        onClick: this.colorAdded,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 8\n        }\n      }, \"Add Color\")), this.colors.map(function (_ref2) {\n        var key = _ref2.key,\n            first = _ref2.first,\n            second = _ref2.second,\n            lock = _ref2.lock,\n            index = _ref2.index;\n        return /*#__PURE__*/React.createElement(Color, {\n          key: key,\n          keyColor: key,\n          color1: first,\n          color2: second,\n          lock: lock,\n          update: _this4.updateArray,\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }\n        });\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/emrekelleci/Desktop/color/Client/src/App.js"],"names":["React","createRef","Color","TweenMax","App","props","state","col1","col2","render","empty","key","colors","colorChange","bind","colorAdded","arrayModified","updateArray","firstinput","secondinput","fetch","result","json","data","setState","maxKey","map","keyColor","color1","color2","lock","push","first","second","process","env","NODE_ENV","console","log","e","target","name","value","alert","colorJson","method","headers","body","JSON","stringify","setTimeout","el","backgroundColor","index","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAO,aAAP;AACA,SAASC,QAAT,QAAyB,UAAzB;;IAEMC,G;;;;;AACJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAChB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAW;AAACC,MAAAA,IAAI,EAAC,EAAN;AAASC,MAAAA,IAAI,EAAC,EAAd;AAAiBC,MAAAA,MAAM,EAAC,KAAxB;AAA8BC,MAAAA,KAAK,EAAC,EAApC;AAAuCC,MAAAA,GAAG,EAAC;AAA3C,KAAX;AACA,UAAKC,MAAL,GAAc,EAAd;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,+BAAnB;AACA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBD,IAAhB,+BAAlB;AACA,UAAKE,aAAL,GAAqB,MAAKA,aAAL,CAAmBF,IAAnB,+BAArB;AACA,UAAKG,WAAL,GAAmB,MAAKA,WAAL,CAAiBH,IAAjB,+BAAnB;AACA,UAAKI,UAAL,GAAiBjB,SAAS,EAA1B;AACA,UAAKkB,WAAL,GAAkBlB,SAAS,EAA3B;AATgB;AAUpB;;;;;;;;;;;AAIG,qBAAKW,MAAL,GAAY,EAAZ;;uBACqBQ,KAAK,6B;;;AAApBC,gBAAAA,M;;uBACaA,MAAM,CAACC,IAAP,E;;;AAAbC,gBAAAA,I;AACN,qBAAKP,aAAL,CAAmBO,IAAnB;AACA,qBAAKC,QAAL,CAAc;AAACf,kBAAAA,MAAM,EAAC;AAAR,iBAAd;;;;;;;;;;;;;;;;;;kCAEYc,I,EAAK;AAAA;;AACjB,UAAIE,MAAM,GAAC,CAAX;AACFF,MAAAA,IAAI,CAACG,GAAL,CAAS,gBAAqC;AAAA,YAAnCf,GAAmC,QAAnCA,GAAmC;AAAA,YAA/BgB,QAA+B,QAA/BA,QAA+B;AAAA,YAAtBC,MAAsB,QAAtBA,MAAsB;AAAA,YAAfC,MAAe,QAAfA,MAAe;AAAA,YAARC,IAAQ,QAARA,IAAQ;AAC1CH,QAAAA,QAAQ,GAACF,MAAV,GAAmBA,MAAM,GAACE,QAA1B,GAAqCF,MAAM,GAACA,MAA5C;;AACA,QAAA,MAAI,CAACb,MAAL,CAAYmB,IAAZ,CAAiB;AAACpB,UAAAA,GAAG,EAACA,GAAL;AAASgB,UAAAA,QAAQ,EAAChB,GAAlB;AAAsBqB,UAAAA,KAAK,EAACJ,MAA5B;AAAmCK,UAAAA,MAAM,EAACJ,MAA1C;AAAiDC,UAAAA,IAAI,EAACA;AAAtD,SAAjB,EAF2C,CAEmC;;AAChF,OAHD;AAIEL,MAAAA,MAAM,IAAE,CAAR;AACA,WAAKD,QAAL,CAAc;AAACb,QAAAA,GAAG,EAACc;AAAL,OAAd;AAEH;;;wCAEoB;AAEjB,WAAKR,WAAL;;AACA,UAAGiB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA5B,EAA0C;AACzCC,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACE,OAFH,MAES;AACLD,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACF;AAGL;;;gCAEaC,C,EAAE;AAGR,WAAKf,QAAL,CAAc;AAAC,SAACe,CAAC,CAACC,MAAF,CAASC,IAAV,GAAgBF,CAAC,CAACC,MAAF,CAASE;AAA1B,OAAd;AAEL;;;;mGAEeH,C;;;;;;;;AAEhBI,gBAAAA,KAAK,CAAC,KAAKrC,KAAL,CAAWC,IAAZ,CAAL;AAEKqC,gBAAAA,S,GAAW;AACd,yBAAM,KAAKtC,KAAL,CAAWK,GADH;AAEd,8BAAW,KAAKL,KAAL,CAAWK,GAFR;AAGd,4BAAU,KAAKL,KAAL,CAAWC,IAHP;AAGY;AAC1B,4BAAU,KAAKD,KAAL,CAAWE,IAJP;AAKd,0BAAQ;AALM,iB;AAQf,qBAAKgB,QAAL,CAAc;AAAC,mBAAC,KAAKN,UAAL,CAAgBuB,IAAjB,GAAuB;AAAxB,iBAAd;AACA,qBAAKjB,QAAL,CAAc;AAAC,mBAAC,KAAKL,WAAL,CAAiBsB,IAAlB,GAAwB;AAAzB,iBAAd;AAIA,qBAAKjB,QAAL,CAAc;AAACb,kBAAAA,GAAG,EAAC,KAAKL,KAAL,CAAWK,GAAX,GAAe;AAApB,iBAAd;AAEGS,gBAAAA,KAAK,iCAAgC;AAClCyB,kBAAAA,MAAM,EAAC,MAD2B;AAElCC,kBAAAA,OAAO,EAAE;AACV,oCAAgB;AADN,mBAFyB;AAKlCC,kBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,SAAf;AAL4B,iBAAhC,CAAL;AAOFM,gBAAAA,UAAU,CAAC,YAAI;AAACb,kBAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;;AAAoB,kBAAA,MAAI,CAACrB,WAAL;AAAmB,iBAA7C,EAA+C,GAA/C,CAAV;AACA,qBAAKC,UAAL,CAAgBwB,KAAhB,GAAsB,EAAtB;AACA,qBAAKvB,WAAL,CAAiBuB,KAAjB,GAAuB,EAAvB;;;;;;;;;;;;;;;;;;6BAKM;AAAA;;AACL,0BAEE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AAAI,QAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADA,eAEA;AAAG,QAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+OAFA,eAGA;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AAAO,QAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAsC;AAAO,QAAA,SAAS,EAAC,kBAAjB;AAAoC,QAAA,GAAG,EAAE,aAAAS,EAAE;AAAA,iBAAI,MAAI,CAACjC,UAAL,GAAkBiC,EAAtB;AAAA,SAA3C;AAAqE,QAAA,IAAI,EAAC,MAA1E;AAAiF,QAAA,IAAI,EAAC,MAAtF;AAA6F,QAAA,QAAQ,EAAE,KAAKtC,WAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAtC,eACG;AAAK,QAAA,SAAS,EAAC,UAAf;AAAyB,QAAA,KAAK,EAAE;AAACuC,UAAAA,eAAe,EAAC,KAAK9C,KAAL,CAAWC;AAA5B,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADH,CADA,eAIA;AAAO,QAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAwC;AAAO,QAAA,SAAS,EAAC,mBAAjB;AAAqC,QAAA,GAAG,EAAE,aAAA4C,EAAE;AAAA,iBAAI,MAAI,CAAChC,WAAL,GAAmBgC,EAAvB;AAAA,SAA5C;AAAuE,QAAA,IAAI,EAAC,OAA5E;AAAoF,QAAA,IAAI,EAAC,MAAzF;AAAgG,QAAA,IAAI,EAAC,MAArG;AAA6G,QAAA,QAAQ,EAAE,KAAKtC,WAA5H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAxC,eACA;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,KAAK,EAAE;AAACuC,UAAAA,eAAe,EAAC,KAAK9C,KAAL,CAAWE;AAA5B,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADA,CAJA,eAQA;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAA2B,QAAA,OAAO,EAAE,KAAKO,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBARA,CAHA,EAaC,KAAKH,MAAL,CAAYc,GAAZ,CAAgB;AAAA,YAAEf,GAAF,SAAEA,GAAF;AAAA,YAAMqB,KAAN,SAAMA,KAAN;AAAA,YAAYC,MAAZ,SAAYA,MAAZ;AAAA,YAAmBH,IAAnB,SAAmBA,IAAnB;AAAA,YAAwBuB,KAAxB,SAAwBA,KAAxB;AAAA,4BACZ,oBAAC,KAAD;AAAO,UAAA,GAAG,EAAE1C,GAAZ;AAAiB,UAAA,QAAQ,EAAEA,GAA3B;AAAgC,UAAA,MAAM,EAAEqB,KAAxC;AAA+C,UAAA,MAAM,EAAEC,MAAvD;AAA+D,UAAA,IAAI,EAAEH,IAArE;AAA2E,UAAA,MAAM,EAAE,MAAI,CAACb,WAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADY;AAAA,OAAhB,CAbD,CAFF;AAyBH;;;;EA9GgBjB,KAAK,CAACsD,S;;AAiHxB,eAAelD,GAAf","sourcesContent":["import React,{ createRef } from 'react';\nimport './App.css';\nimport Color from './Color.js';\nimport \"./Color.css\";\nimport { TweenMax } from 'gsap/all';\n\nclass App extends React.Component {\n  constructor(props) {\n     super(props);\n     this.state={col1:\"\",col2:\"\",render:false,empty:\"\",key:0};\n     this.colors = [];\n     this.colorChange = this.colorChange.bind(this);\n     this.colorAdded = this.colorAdded.bind(this);\n     this.arrayModified = this.arrayModified.bind(this);\n     this.updateArray = this.updateArray.bind(this);\n     this.firstinput= createRef();\n     this.secondinput =createRef();\n}\n\n  async updateArray(){\n\n    this.colors=[];\n    const result = await fetch(`http://localhost:80/color`);\n    const data = await result.json();\n    this.arrayModified(data);\n    this.setState({render:true});\n  }\n  arrayModified(data){\n    let maxKey=0;\n  data.map(({key,keyColor,color1,color2,lock})=>{\n     (keyColor>maxKey)? maxKey=keyColor : maxKey=maxKey;\n     this.colors.push({key:key,keyColor:key,first:color1,second:color2,lock:lock});//********\n  });\n    maxKey+=1;\n    this.setState({key:maxKey});\n\n}\n\n  componentDidMount(){\n\n    this.updateArray();\n    if(process.env.NODE_ENV === 'production') {\n     console.log(\"It's production\");\n      } else {\n        console.log(\"It's development\");\n     }\n\n\n}\n\n  colorChange(e){\n\n\n        this.setState({[e.target.name]:e.target.value});\n\n  }\n\n async colorAdded(e){\n\n  alert(this.state.col1);\n\n   let colorJson= {\n    \"key\":this.state.key,\n    \"keyColor\":this.state.key,\n   \t\"color1\" :this.state.col1,//******\n   \t\"color2\" :this.state.col2,\n    \"lock\" :false\n\n   }\n   this.setState({[this.firstinput.name]:\"\"});\n   this.setState({[this.secondinput.name]:\"\"});\n\n\n\n   this.setState({key:this.state.key+1});\n\n      fetch(`http://localhost:80/newcolor`,{\n         method:'POST',\n         headers: {\n        'Content-Type': 'application/json'\n    },\n         body: JSON.stringify(colorJson)})\n\n    setTimeout(()=>{console.log(\"Done\");this.updateArray()}, 100);\n    this.firstinput.value=\"\";\n    this.secondinput.value=\"\";\n\n\n  }\n\n  render(){\n     return(\n\n       <div className=\"biggerPicture\">\n       <h1 className=\"welcome-header\"> Emre's Colors </h1>\n       <p className=\"welcome-text\"> Welcome to my color palette! I created this website to have a space to put the color combinations I like in everyday life. I hope you enjoy it! Feel free to try it, but please delete the colors you create!! Have a good one :) </p>\n       <div className=\"pickcolor\">\n       <label className=\"firstlabel\"> First: <input className=\"firstlabel-input\" ref={el => this.firstinput = el} name=\"col1\" type=\"text\" onChange={this.colorChange}  />\n          <div className=\"firstbox\"style={{backgroundColor:this.state.col1}}> </div>\n       </label>\n       <label className=\"secondlabel\"> Second: <input className=\"secondlabel-input\" ref={el => this.secondinput = el} type=\"reset\" name=\"col2\" type=\"text\"  onChange={this.colorChange}  />\n       <div className=\"secondbox\" style={{backgroundColor:this.state.col2}}> </div>\n\n        </label>\n       <button className=\"button\" onClick={this.colorAdded}>Add Color</button>\n       </div>\n       {this.colors.map(({key,first,second,lock,index})=>(\n            <Color key={key} keyColor={key} color1={first} color2={second} lock={lock} update={this.updateArray} />\n        )\n      )}\n\n      </div>\n\n\n      );\n\n }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}